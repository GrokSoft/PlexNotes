(function(){function t(){var a=window.innerWidth;if(!(465>a)){var d=document.documentElement||document.body,c=angular.element(document.querySelector(".navbar")),b=c.prop("offsetTop"),f;a:{try{f=c.offset();break a}catch(e){}f=c[0];var l=0,k=0,k=document.documentElement||document.body,l=window.pageXOffset||k.scrollLeft,k=window.pageYOffset||k.scrollTop,l=f.getBoundingClientRect().left+l,k=f.getBoundingClientRect().top+k;f={left:l,top:k}}d=window.pageYOffset||d.scrollTop;0!=b&&d>f+20?(c.addClass("navbar-fixed-top"),
c.addClass("fixed-menu"),angular.element.find("#page").addClass("fixed-menu-content-padding")):465<a&&0==b&&593>=d&&(c.removeClass("navbar-fixed-top"),c.removeClass("fixed-menu"),angular.element.find("#page").removeClass("fixed-menu-content-padding"))}}var g,n=[],p=[],q=[],r=[],e=angular.module("plexNotes",["ui.bootstrap","ngAnimate","media-directives"]);e.controller("PlexNotesController",["$scope","$http","$location","$anchorScroll","$element",function(a,d,c,b,f){var l=!0;g="http://"+c.absUrl().split("/")[2]||
"Unknown";g="http://localhost:8080";this.getUrlBase=function(){return g};a.movies=[];d.get(g+"/api/notes").success(function(a){n=a;console.log("Data Read NotesController "+a.length+" items.")}).error(function(a,b,d,f){alert("Could not retrieve data from server, please verify the server is running and accessible!\n"+JSON.stringify(f,null,4));a=document.querySelector("#noServer");angular.element(a).removeClass("hidden")});d.get(g+"/api/data/statuses").success(function(a){q=a;console.log("Data Read  statuses "+
a.length)});d.get(g+"/api/data/priorities").success(function(a){p=a;console.log("Data Read "+a.length+" priorities")});d.get(g+"/api/data/categories").success(function(a){r=a;console.log("Data Read categories"+a.length)});a.scrollTo=function(a){c.hash(a);b()};a.refreshNotes=function(){d.get(g+"/api/notes").success(function(a){n=a;console.log("Data Read NotesController "+a.length+" items.")})};this.getVersion=function(){return"Version: 0.0.1"};this.toggleCollapse=function(a){a=document.querySelector("#"+
a);a=angular.element(a);a.hasClass("glyphicon-chevron-up")?(a.removeClass("glyphicon-chevron-up"),a.addClass("glyphicon-chevron-down")):(a.removeClass("glyphicon-chevron-down"),a.addClass("glyphicon-chevron-up"))};this.toggleAllCollapse=function(){var a=f.find("#chevron"),b=f.find("collapse");l?(b.collapse("hide"),a.removeClass("glyphicon-chevron-up"),a.removeClass("glyphicon-chevron-up"),a.addClass("glyphicon-chevron-down")):(b.collapse("show"),a.removeClass("glyphicon-chevron-down"),a.addClass("glyphicon-chevron-up"));
l=!l};console.log("$location = "+JSON.stringify(c));console.log("$location.absUrl() = "+c.absUrl());console.log("urlBase = "+g)}]);e.directive("collapseWidthHeight",["$scope","$animation",function(a,d){return{restrict:"EAC",link:function(a,b,f){function l(a){function f(){m===c&&(m=void 0)}var c=d(b,a);m&&m.cancel();m=c;c.then(f,f);return c}function k(){b.removeClass("collapsing-width-height");b.addClass("collapse in");b.css({width:"auto"});b.css({height:"auto"})}function e(){b.removeClass("collapsing-width-height");
b.addClass("collapse")}var g=!0,m;a.$watch(f.uibCollapseWidthHeight,function(a){a?g?(g=!1,e(),b.css({width:0})):(b.css({width:b[0].scrollWidth+"px",height:b[0].scrollHeight+"px"}),b.removeClass("collapse in").addClass("collapsing-width-height"),l({width:0,height:0}).then(e)):g?(g=!1,k()):(b.removeClass("collapse").addClass("collapsing-width-height"),l({width:b[0].scrollWidth+"px",height:b[0].scrollHeight+"px"}).then(k))})}}}]);e.directive("collapseWidth",["$scope","$animate","$timeout",function(a,
d,c){return{link:function(a,f,c){function k(a){function b(){h===c&&(h=void 0)}var c=d(f,a);h&&h.cancel();h=c;c.then(b,b);return c}function e(){f.removeClass("collapsing-width");f.addClass("collapse in");f.css({width:"auto"})}function g(){f.removeClass("collapsing-width");f.addClass("collapse")}var m=!0,h;a.$watch(c.collapseWidth,function(a){a?m?(m=!1,g(),f.css({width:0})):(f.css({width:f[0].scrollWidth+"px"}),f.removeClass("collapse in").addClass("collapsing-width"),k({width:0}).then(g)):m?(m=!1,
e()):(f.removeClass("collapse").addClass("collapsing-width"),k({width:f[0].scrollWidth+"px"}).then(e))})}}}]);e.directive("ngConfirmClick",[function(){return{priority:-1,restrict:"A",link:function(a,d,c){d.bind("click",function(a){var f=c.ngConfirmClick;f&&!confirm(f)&&(a.stopImmediatePropagation(),a.preventDefault())})}}}]);e.directive("menu",function(){return{restrict:"E",templateUrl:"menu.html",controller:function(){},controllerAs:"menuCtrl"}});e.directive("plexJumbo",function(){return{restrict:"E",
templateUrl:"plex-jumbo.html",controller:function(a){a.myInterval=5E3;a.noWrapSlides=!0;a.active=0;var d=a.slides=[],c=0;a.addSlide=function(){d.push({image:"//unsplash.it/"+(600+d.length+1)+"/300",text:["Nice image","Awesome photograph","That is so cool","I love that"][d.length%4],id:c++})};a.randomize=function(){for(var a=[],b=0;b<c;++b)a[b]=b;var e,g=a.length;if(g)for(;--g;)e=Math.floor(Math.random()*(g+1)),b=a[e],a[e]=a[g],a[g]=b;b=0;for(e=d.length;b<e;b++)d[b].id=a.pop()};for(var b=0;4>b;b++)a.addSlide()},
controllerAs:"jumboCtrl"}});e.controller("NotesController",["$scope","$http","$element",function(a,d,c){a.statuses=function(){console.log("Getting statuses from NotesController");return q};a.priorities=function(){console.log("Getting priorities from NotesController");return p};a.categories=function(){console.log("Getting categories from NotesController");return r};a.notes=function(){console.log("Getting notes from NotesController");return n};a.intToString=function(a){return isNaN(a)?a:parseInt(a)};
a.zoom=function(a,d){var c=document.querySelector("#"+a),c=angular.element(c),e=angular.element(d.target);c.hasClass("grow-md")?(e.removeClass("glyphicon-zoom-out"),e.addClass("glyphicon-zoom-in"),c.removeClass("grow-md")):(e.removeClass("glyphicon-zoom-in"),e.addClass("glyphicon-zoom-out"),c.addClass("grow-md"))};a.deleteNote=function(b){d({method:"DELETE",url:"http://localhost:8080/api/notes/"+b,data:a.newNote,headers:{"content-Type":"application/json"}}).success(function(b,c,d,e){b.errors?alert("Note was NOT deleted:"+
JSON.stringify(errors,null,4)):alert("Note was deleted:"+JSON.stringify(b,null,4));console.log("Note delete: "+JSON.stringify(b));a.refreshNotes()})};a.toggleAllNotesCollapse=function(){n.forEach(function(a){a=document.querySelector("#note"+a.id);a.isCollapsedNote=!a.isCollapsedNote})};a.isCollapsedNotes=!1;a.isCollapsedNotesAll=!1;a.isCollapsedNote=!0;a.isCollapsedDetails=!1;a.isCollapsedHorizontal=!1;a.isCollapsedList=!1;a.isCollapsedCat=!1}]);e.directive("getSize",function(){return{restrict:"A",
link:function(a,d,c){var b=d[0].clientWidth,e=d[0].clientHeight;console.log(b+" "+e);a.getSizeWidth=function(){return b+"px"};a.getSizeHeight=function(){return e+"px"}}}});e.directive("hoverSpin",function(){return{restrict:"A",link:function(a,d){d.on("mouseenter",function(){d.addClass("gly-spin-slow")});d.on("mouseleave",function(){d.removeClass("gly-spin-slow")})}}});e.directive("notes",function(){return{restrict:"E",templateUrl:"notes.html",controller:"NotesController",controllerAs:"notesCtrl"}});
e.directive("notesList",function(){return{restrict:"E",templateUrl:"notesList.html",controller:"NotesController",controllerAs:"notesListCtrl"}});e.directive("notesDropdown",function(){return{restrict:"E",templateUrl:"notesDropdown.html",controller:"NotesController",controllerAs:"notesDropdownCtrl"}});e.controller("NotesCarouselController",["$scope","$document",function(a,d){a.init=function(c){a.id=c};a.getId=function(){return a.id};this.setCarousel=function(){new h(d,a.id)};a.notes=function(){console.log("Getting notes from NotesCarouselController");
return n}}]);e.directive("notesCarousel",function(){return{restrict:"E",templateUrl:"notesCarousel.html",controller:"NotesCarouselController",controllerAs:"notesCarouselCtrl"}});e.directive("note",function(){return{restrict:"E",templateUrl:"note.html",controller:function(a){a.statuses=function(){console.log("Getting statuses from Note-Controller");return q};a.priorities=function(){console.log("Getting priorities from Note-Controller");return p};a.categories=function(){console.log("Getting categories from Note-Controller");
return r};a.notes=function(){console.log("Getting notes from Note-Controller");return n};a.intToString=function(a){return isNaN(a)?a:parseInt(a)}},controllerAs:"noteCtrl"}});e.directive("newNote",function(){return{restrict:"E",templateUrl:"newNote.html",controller:function(a,d){d.defaults.headers.post["Content-Type"]="application/json;charset=utf-8";a.newNoteTemplate={id:0,title:"",user:"",emailme:!0,priority:"",status:"",details:"",categories:[]};a.newNote=JSON.parse(JSON.stringify(a.newNoteTemplate));
a.createNote=function(){if(""==a.newNote.status||""==a.newNote.priority||0==a.newNote.categories.length||""==a.newNote.user||""==a.newNote.title)alert("You must fill in all the data to save an note!");else{a.submitted=!1;a.newNote.status=parseInt(a.newNote.status);a.newNote.priority=parseInt(a.newNote.priority);for(var c=0;c<a.newNote.categories.length;c++)a.newNote.categories[c]=parseInt(a.newNote.categories[c]);d({method:"POST",url:"http://localhost:8080/api/notes",data:a.newNote,headers:{"content-Type":"application/json"}}).success(function(b,
c,d,e){b.errors?alert("New note was NOT created:"+JSON.stringify(errors,null,4)):alert("New note was created:"+JSON.stringify(b,null,4));console.log("Note created: "+JSON.stringify(b));a.refreshNotes()});a.newNote=JSON.parse(JSON.stringify(a.newNoteTemplate))}}},controllerAs:"newNoteCtrl"}});e.directive("statuses",function(){return{restrict:"E",templateUrl:"statuses.html",controller:function(){var a=this;this.statuses=[];var d=0;q.forEach(function(c){a.statuses.push({StatusID:d++,StatusName:c})})},
controllerAs:"statusesCtrl"}});e.directive("priorities",function(){return{restrict:"E",templateUrl:"priorities.html",controller:function(){this.priorities=function(){console.log("Getting priorities from priorities");return p}},controllerAs:"prioritiesCtrl"}});e.directive("categories",function(){return{restrict:"E",templateUrl:"categories.html",controller:function(){this.categories=function(){console.log("Getting categories from categories");return r}},controllerAs:"categoriesCtrl"}});var h=function(a,
d,c,b){Object.defineProperties(this,{carId:{value:angular.element(document.querySelector(d))},inc:{value:"undefined"!==typeof c?c:2E3,enumerable:!0},carInterval:{value:"undefined"!==typeof b?b:1E4,enumerable:!0}});if(void 0===h.first||!0===h.first)h.first=!1,h.carDelay=0,h.running=!0;h.carDelay+=this.inc;setTimeout(function(){},h.carDelay)};null==document.onscroll&&(document.onscroll=t)})(); //# sourceMappingURL=app.js.map
