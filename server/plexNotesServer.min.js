plexNotesServer.js:132: WARNING - Misplaced function annotation. This JSDoc is not attached to a function node. Are you missing parentheses?
    server.get('/api/issues', function (req, res, next) {
    ^

plexNotesServer.js:160: WARNING - Misplaced function annotation. This JSDoc is not attached to a function node. Are you missing parentheses?
    server.get('/api/issues/:id', function (req, res, next) {
    ^

plexNotesServer.js:192: WARNING - Misplaced function annotation. This JSDoc is not attached to a function node. Are you missing parentheses?
    server.post('/api/issues', function (req, res, next) {
    ^

plexNotesServer.js:232: WARNING - Misplaced function annotation. This JSDoc is not attached to a function node. Are you missing parentheses?
    server.get('/confirm/:name', function (req, res, next) {
    ^

0 error(s), 4 warning(s)
(function(){function l(b,g,a){var c=b.query.whatever;console.log("Received %s",b.params.name);g.send("hello "+b.params.name+" it works! ("+c+")\n\n");a()}var h=require("fs"),e=require("restify"),d=[{id:1,user:"Bill",priority:3,status:3,Notes:"",issues:["3","6"]}],k=d[d.length-1].id,a=e.createServer({name:"PlexNotes Server"});a.use(e.fullResponse());a.use(e.queryParser());a.use(e.bodyParser());a.get("/api/issues",function(b,g,a){var c=[],m=b.query.query;d.forEach(function(b){void 0!==m&&-1==b.search(m)||
c.push(b)});0==c.length&&(c=n(g));g.json(c);a()});a.get("/api/issues/:id",function(b,a,f){var c=d.filter(function(a){return a.id==b.params.id})[0];void 0===c&&(c=n(a));a.json(c);f()});a.post("/api/issues",function(b,a,f){var c;try{var e="string"!==typeof b.body?b.body.toString():JSON.parse(b.body).body;k++;c={id:k,body:e};d.push(c);p()}catch(h){a.statusCode=400,c="data invalid"}a.json(c);f()});a.get("/hello/:name",l);a.head("/hello/:name",l);a.get("/confirm/:name",function(a,d,f){d.send("confirm "+
a.params.name+" it works!\n\n");f()});var n=function(a){a.statusCode=404;return"Note NOT found"},p=function(){h.writeFile("plexData.json",JSON.stringify(d),function(a){if(a)return console.log(a);console.log("The file was saved with %d issues.",d.length)})};(function(){h.exists("plexData.json",function(a){a?h.readFile("plexData.json",function(a,b){if(a)return console.log(a);d=JSON.parse(b);d.forEach(function(a){k=Math.max(k,parseInt(a.id))});console.log("There are %d notes available.",plexDatalength)}):
console.log("No Data file - using the default data")})})();a.listen(8080,function(){console.log("%s listening at %s",a.name,a.url)})})(); //# sourceMappingURL=plexNotesServer.js.map
