plexNotesServer.js:147: WARNING - Misplaced function annotation. This JSDoc is not attached to a function node. Are you missing parentheses?
    server.get('/api/issues', function (req, res, next) {
    ^

plexNotesServer.js:175: WARNING - Misplaced function annotation. This JSDoc is not attached to a function node. Are you missing parentheses?
    server.get('/api/issues/:id', function (req, res, next) {
    ^

plexNotesServer.js:207: WARNING - Misplaced function annotation. This JSDoc is not attached to a function node. Are you missing parentheses?
    server.post('/api/issues', function (req, res, next) {
    ^

plexNotesServer.js:278: WARNING - Misplaced function annotation. This JSDoc is not attached to a function node. Are you missing parentheses?
    server.get('/confirm/:name', function (req, res, next) {
    ^

0 error(s), 4 warning(s)
(function(){function l(c,e,g){var b=c.query.whatever;console.log("Received %s",c.params.name);e.send("hello "+c.params.name+" it works! ("+b+")\n\n");g()}var h=require("fs"),f=require("restify"),d=[{id:1,user:"Bill",priority:3,status:3,Notes:"",issues:["3","6"]},{id:2,user:"Todd",priority:2,status:1,Notes:"a note",issues:["2","4"]}],k=d[d.length-1].id,a=f.createServer({name:"PlexNotes Server",formatters:{"application/json":function(c,e,g,b){return b(null,JSON.stringify(g,null,"\t"))}}});a.use(f.fullResponse());
a.use(f.queryParser());a.use(f.bodyParser());a.get("/api/issues",function(c,e,g){var b=[],a=c.query.query;d.forEach(function(c){void 0!==a&&-1==c.search(a)||b.push(c)});0==b.length&&(b=m(e));e.json(b);g()});a.get("/api/issues/:id",function(c,e,a){var b=d.filter(function(b){return b.id==c.params.id})[0];void 0===b&&(b=m(e));e.json(b);a()});a.post("/api/issues",function(c,a,g){var b;console.log(d);try{var f;f=c.body.toString();k++;b=JSON.parse(JSON.stringify(f));console.log(b);d.push(b);n()}catch(h){console.log("Error "+
f),a.statusCode=400}a.json(b);g()});a.get("/hello/:name",l);a.head("/hello/:name",l);a.get("/confirm/:name",function(c,a,d){a.send("confirm "+c.params.name+" it works!\n\n");d()});var m=function(a){a.statusCode=404;return"Note NOT found"},n=function(){h.writeFile("plexData.json",JSON.stringify(d),function(a){if(a)return console.log(a);console.log("The file was saved with %d issues.",d.length)})};(function(){h.exists("plexData.json",function(a){a?h.readFile("plexData.json",function(a,c){if(a)return console.log(a);
d=JSON.parse(c);d.forEach(function(a){k=Math.max(k,parseInt(a.id))});console.log("There are %d issues available.",d.length)}):console.log("No Data file - using the default data")})})();a.listen(8080,function(){console.log("%s listening at %s",a.name,a.url)})})(); //# sourceMappingURL=plexNotesServer.js.map
