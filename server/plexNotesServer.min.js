plexNotesServer.js:143: WARNING - Misplaced function annotation. This JSDoc is not attached to a function node. Are you missing parentheses?
    server.get('/api/issues', function (req, res, next) {
    ^

plexNotesServer.js:171: WARNING - Misplaced function annotation. This JSDoc is not attached to a function node. Are you missing parentheses?
    server.get('/api/issues/:id', function (req, res, next) {
    ^

plexNotesServer.js:203: WARNING - Misplaced function annotation. This JSDoc is not attached to a function node. Are you missing parentheses?
    server.post('/api/issues', function (req, res, next) {
    ^

plexNotesServer.js:274: WARNING - Misplaced function annotation. This JSDoc is not attached to a function node. Are you missing parentheses?
    server.get('/confirm/:name', function (req, res, next) {
    ^

0 error(s), 4 warning(s)
(function(){function m(d,e,a){var b=d.query.whatever;console.log("Received %s",d.params.name);e.send("hello "+d.params.name+" it works! ("+b+")\n\n");a()}var k=require("fs"),g=require("restify"),c=[{id:1,user:"Bill",priority:3,status:3,Notes:"",issues:["3","6"]},{id:2,user:"Todd",priority:2,status:1,Notes:"a note",issues:["2","4"]}],l=c[c.length-1].id,a=g.createServer({name:"PlexNotes Server"});a.use(g.fullResponse());a.use(g.queryParser());a.use(g.bodyParser());a.get("/api/issues",function(d,e,a){var b=
[],f=d.query.query;c.forEach(function(d){void 0!==f&&-1==d.search(f)||b.push(d)});0==b.length&&(b=n(e));e.json(b);a()});a.get("/api/issues/:id",function(d,a,h){var b=c.filter(function(a){return a.id==d.params.id})[0];void 0===b&&(b=n(a));a.json(b);h()});a.post("/api/issues",function(a,e,h){var b;console.log(c);try{var f;f=a.body.toString();l++;b=JSON.parse(JSON.stringify(f));console.log(b);c.push(b);p()}catch(g){console.log("Error "+f),e.statusCode=400}e.json(b);h()});a.get("/hello/:name",m);a.head("/hello/:name",
m);a.get("/confirm/:name",function(a,e,c){e.send("confirm "+a.params.name+" it works!\n\n");c()});var n=function(a){a.statusCode=404;return"Note NOT found"},p=function(){k.writeFile("plexData.json",JSON.stringify(c),function(a){if(a)return console.log(a);console.log("The file was saved with %d issues.",c.length)})};(function(){k.exists("plexData.json",function(a){a?k.readFile("plexData.json",function(a,d){if(a)return console.log(a);c=JSON.parse(d);c.forEach(function(a){l=Math.max(l,parseInt(a.id))});
console.log("There are %d issues available.",c.length)}):console.log("No Data file - using the default data")})})();a.listen(8080,function(){console.log("%s listening at %s",a.name,a.url)})})(); //# sourceMappingURL=plexNotesServer.js.map
